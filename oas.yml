components:
  schemas:
    Article:
      properties:
        content:
          example: Article content goes here
          type: string
        desc:
          example: article description
          type: string
        id:
          example: "123"
          type: string
        title:
          example: Reverend
          type: string
      type: object
    ArticlesResponse:
      properties:
        data:
          example:
          - content: Article content
            desc: Article Description
            id: 123
            title: Article title
          items:
            properties:
              content:
                example: Article content goes here
                type: string
              desc:
                example: article description
                type: string
              id:
                example: "123"
                type: string
              title:
                example: Reverend
                type: string
            type: object
          type: array
      type: object
  securitySchemes:
    AuthorizationHeader:
      description: Input your token
      scheme: bearer
      type: http
info:
  contact:
    email: abce@email.com
    name: SPears
  description: API TutorialEdge/create-rest-api-in-go-tutorial with swagger!
  license:
    name: MIT
    url: https://en.wikipedia.org/wiki/MIT_License
  termsOfService: http://www.example.com
  title: Backend API
  version: 1.0.0
openapi: 3.0.0
paths:
  /articles:
    get:
      description: ' Fetch all articles.'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArticlesResponse'
          description: A list of all articles
      summary: Get all articles.
      tags:
      - articles
    post:
      description: ' Create a new article.'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: The created article.
      summary: Add a new article.
      tags:
      - articles
  /articles/{id}:
    delete:
      description: ' Delete the article associated with a specific ID.'
      parameters:
      - description: Id of a specific article.
        in: path
        name: id
        required: true
        schema:
          description: Id of a specific article.
          format: string
          type: string
      responses:
        "204":
          description: No Response
      summary: Delete an article by ID.
      tags:
      - articles
    get:
      description: ' Fetch the article associated with a specific ID.'
      parameters:
      - description: Id of a specific article.
        in: path
        name: id
        required: true
        schema:
          description: Id of a specific article.
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
          description: The  article referenced by the id parameter
      summary: Get an article by ID.
      tags:
      - articles
security:
- AuthorizationHeader:
  - read
  - write
servers:
- description: ' Local'
  url: http://localhost:5000
- description: ' Development'
  url: http://www.example-dev.com
- description: ' Production'
  url: http://www.example.com
